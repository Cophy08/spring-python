<?xml version="1.0" encoding="UTF-8"?>
<components xmlns="http://www.springframework.org/springpython/schema/components"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/springpython/schema/components
       		http://springpython.webfactional.com/schema/context/spring-python-context-1.0.xsd">

	<description>
		This application context is used to show various components, defined using the
		code completion tools found in Eclipse, while pointed at an XSD spec.
		
		Please note that this sample is used to show pycontainer's format, which is supported
		by the XSD spec.
	</description>
	
	<description>You can have multiple descriptions at the root level.</description>

    <component id="user_details_service" class="springpython.security.userdetails.InMemoryUserDetailsService">
    	<description>
	    	This is an in-memory list of users, with their password and roles. It is valuable
	    	for unit testing without interacting with the real user authentication subsystem.
	    	
	    	The value between the property tags is run through a python evaluator, so it will
	    	translate the {...} text into a python dictionary with two entries.
    	</description>
	    <property name="user_dict">
			{
				"basicuser": ("password1", ["ROLE_BASIC"], True),
				"otheruser": ("password2", ["ROLE_OTHER"], True)
			}
        </property>
    </component>

    <component id="auth_provider" class="springpython.security.providers.dao.DaoAuthenticationProvider">
    	<description>This component has a property which references another component by name.</description>
	    <property name="user_details_service" local="user_details_service"/>
    </component>

	<component id="auth_manager" class="springpython.security.providers.AuthenticationManager">
		<description>
			This component has a property that holds a list of values, and in this case, is
			loading the list with references to other components.
		</description>
		<property name="auth_providers">
			<list local="auth_provider"/>
		</property>
	</component>
	
	<description>
		The following is a component with no properties.
		
		NOTE: This description is not tied to the RoleVoter component.
	</description>
	
	<component id="roleVoter" class="springpython.security.vote.RoleVoter"/>

	<component id="access_decision_mgr" class="springpython.security.vote.UnanimousBased">
		<description>
			This component has a mix of properties.
			
			The first property is evaluated as a python boolean False, NOT as a string of "False".
			
			The second property is a list, and will contain one entry, a reference to the roleVoter
			component.
		</description>
		<property name="allow_if_all_abstain">False</property>
		<property name="access_decision_voters">
			<list local="roleVoter"/>
		</property>
	</component>
	
	<component id="securityInteceptor" class="springpython.security.intercept.MethodSecurityInterceptor">
	  <property name="validate_config_attributes">False</property>
	  <property name="auth_manager" local="auth_manager"/>
	  <property name="access_decision_mgr" local="access_decision_mgr"/>
	  <property name="obj_def_source">
	    	[
				("springpythontest.support.testSecurityClasses.SampleService.get.*", ["ROLE_BASIC"]),
				("springpythontest.support.testSecurityClasses.SampleService.do.*", ["ROLE_BASIC"]),
				("springpythontest.support.testSecurityClasses.SampleService.update.*", ["ROLE_MGR"])
	      	]
	  </property>
	</component>

	<description>This is another stand alone component</description>	
	<component id="targetService" class="springpythontest.support.testSecurityClasses.SampleService"/>

	<component id="sampleService" class="springpython.aop.ProxyFactoryObject">
		<description>
			Hopefully by now you can deduce what this component's properties are made up of.
		</description>
		<property name="target" local="targetService"/>
		<property name="interceptors">
			<list local="securityInteceptor"/>
		</property>
	</component>
</components>