<components>
	<component id="authenticationProvider" class="springpython.security.providers.InMemoryAuthenticationProvider">
		<property name="userMap">
			{
				"basicuser": ("password1", ["ROLE_BASIC"], True),
				"otheruser": ("password2", ["ROLE_OTHER"], True)
			}
		</property>
	</component>
		
	<component id="authenticationManager" class="springpython.security.providers.AuthenticationManager">
	  <property name="authenticationProviderList">
	    <list local="authenticationProvider"/>
	  </property>
	</component>
	
	<component id="roleVoter" class="springpython.security.vote.RoleVoter"/>

	<component id="accessDecisionManager" class="springpython.security.vote.UnanimousBased">
		<property name="allowIfAllAbstainDecisions">False</property>
		<property name="accessDecisionVoterList">
			<list local="roleVoter"/>
		</property>
	</component>
	
	<component id="securityInteceptor" class="springpython.security.intercept.MethodSecurityInterceptor">
	  <property name="validateConfigAttributes">False</property>
	  <property name="authenticationManager" local="authenticationManager"/>
	  <property name="accessDecisionManager" local="accessDecisionManager"/>
	  <property name="objectDefinitionSource">
	    	[
				("springpython.test.support.testSecurityClasses.SampleService.get.*", ["ROLE_BASIC"]),
				("springpython.test.support.testSecurityClasses.SampleService.do.*", ["ROLE_BASIC"]),
				("springpython.test.support.testSecurityClasses.SampleService.update.*", ["ROLE_MGR"])
	      	]
	  </property>
	</component>
	
	<component id="targetService" class="springpython.test.support.testSecurityClasses.SampleService"/>

	<component id="sampleService" class="springpython.aop.ProxyFactoryComponent">
		<property name="target" local="targetService"/>
		<property name="interceptors">
			<list local="securityInteceptor"/>
		</property>
	</component>
	
</components>
