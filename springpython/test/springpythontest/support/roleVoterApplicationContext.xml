<components xmlns="http://springpython.webfactional.com/schema/context/spring-python-context-1.0.xsd"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            
    <component id="user_details_service" class="springpython.security.userdetails.InMemoryUserDetailsService">
	    <property name="user_dict">
			{
				"basicuser": ("password1", ["ROLE_BASIC"], True),
				"otheruser": ("password2", ["ROLE_OTHER"], True)
			}
        </property>
    </component>

    <component id="auth_provider" class="springpython.security.providers.dao.DaoAuthenticationProvider">
	    <property name="user_details_service" local="user_details_service"/>
    </component>

	<component id="auth_manager" class="springpython.security.providers.AuthenticationManager">
	  <property name="auth_providers">
	    <list local="auth_provider"/>
	  </property>
	</component>
	
	<component id="roleVoter" class="springpython.security.vote.RoleVoter"/>

	<component id="access_decision_mgr" class="springpython.security.vote.UnanimousBased">
		<property name="allow_if_all_abstain">False</property>
		<property name="access_decision_voters">
			<list local="roleVoter"/>
		</property>
	</component>
	
	<component id="securityInteceptor" class="springpython.security.intercept.MethodSecurityInterceptor">
	  <property name="validate_config_attributes">False</property>
	  <property name="auth_manager" local="auth_manager"/>
	  <property name="access_decision_mgr" local="access_decision_mgr"/>
	  <property name="obj_def_source">
	    	[
				("springpythontest.support.testSecurityClasses.SampleService.get.*", ["ROLE_BASIC"]),
				("springpythontest.support.testSecurityClasses.SampleService.do.*", ["ROLE_BASIC"]),
				("springpythontest.support.testSecurityClasses.SampleService.update.*", ["ROLE_MGR"])
	      	]
	  </property>
	</component>
	
	<component id="targetService" class="springpythontest.support.testSecurityClasses.SampleService"/>

	<component id="sampleService" class="springpython.aop.ProxyFactoryComponent">
		<property name="target" local="targetService"/>
		<property name="interceptors">
			<list local="securityInteceptor"/>
		</property>
	</component>
	
</components>
