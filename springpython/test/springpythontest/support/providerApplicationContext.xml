<components>

        <component id="roleVoter" class="springpython.security.vote.RoleVoter">
        	<property name="rolePrefix">"role"</property>
        </component>
        
        <component id="labelBasedAclVoter" class="springpython.security.vote.LabelBasedAclVoter">
        	<property name="labelMap">
        		{
        			"LABEL_BLUE": ["blue", "blue-orange"],
        			"LABEL_ORANGE": ["orange", "blue-orange"],
					"LABEL_SHARED": ["blue", "orange", "blue-orange"]
				}
			</property>
			<property name="attributeIndicatingLabeledOperation">"LABELED_OPERATION"</property>
		</component>        
        
        <component id="deprecatedInMemoryAuthenticationProvider" class="springpython.security.providers.InMemoryAuthenticationProvider">
        	<property name="userMap">
        		{
		        	"user1": ("password1", ["role1", "blue"], True),
		        	"user2": ("password2", ["role1", "orange"], True),
		  			"adminuser": ("password3", ["role1", "admin"], True),
		        	"disableduser": ("password4", ["role1", "blue"], False),
		        	"emptyuser": ("", [], True)
	        	}
	        </property>
        </component>
        
        <component id="deprecatedInMemoryAuthenticationProvider2" class="springpython.security.providers.InMemoryAuthenticationProvider">
        	<property name="userMap">
        		{
		        	"toomanyroles1": ("password5", ["blue", "orange"], True),
		        	"toomanyroles2": ("password6", ["orange", "admin"], True),
		        	"toomanyroles3": ("password7", ["blue", "admin"], True),
		        	"toomanyroles4": ("password8", ["blue", "admin"], True) 
	        	}
	        </property>
        </component>

        <component id="deprecatedAuthenticationManager" class="springpython.security.providers.AuthenticationManager">
        	<property name="authenticationProviderList">
        		<list local="deprecatedInMemoryAuthenticationProvider"/>
        		<list local="deprecatedInMemoryAuthenticationProvider2"/>
        	</property>
        </component>

		<component id="dataSource" class="springpythontest.support.testSupportClasses.StubDBFactory"/>
        
        <component id="userDetailsService" class="springpython.security.userdetails.dao.DatabaseUserDetailsService">
			<property name="dataSource" local="dataSource"/>
        </component>
        
		<component id="daoAuthenticationProviderHidingUserNotFoundExceptions" class="springpython.security.providers.dao.DaoAuthenticationProvider">
			<property name="userDetailsService" local="userDetailsService"/>
		</component>
		
        <component id="daoAuthenticationManagerHidingUserNotFoundExceptions" class="springpython.security.providers.AuthenticationManager">
        	<property name="authenticationProviderList">
        		<list local="daoAuthenticationProviderHidingUserNotFoundExceptions"/>
        	</property>
        </component>
        
		<component id="daoAuthenticationProviderNotHidingUserNotFoundExceptions" class="springpython.security.providers.dao.DaoAuthenticationProvider">
			<property name="userDetailsService" local="userDetailsService"/>
			<property name="hideUserNotFoundExceptions">False</property>
		</component>
		
        <component id="daoAuthenticationManagerNotHidingUserNotFoundExceptions" class="springpython.security.providers.AuthenticationManager">
        	<property name="authenticationProviderList">
        		<list local="daoAuthenticationProviderNotHidingUserNotFoundExceptions"/>
        	</property>
        </component>
        
        <component id="inMemoryUserDetailsService" class="springpython.security.userdetails.InMemoryUserDetailsService">
        	<property name="userMap">
        		{
		        	"user1": ("password1", ["role1", "blue"], True),
		        	"user2": ("password2", ["role1", "orange"], True),
		  			"adminuser": ("password3", ["role1", "admin"], True),
		        	"disableduser": ("password4", ["role1", "blue"], False),
		        	"emptyuser": ("", [], True)
	        	}
	        </property>
        </component>
        
		<component id="inMemoryDaoAuthenticationProvider" class="springpython.security.providers.dao.DaoAuthenticationProvider">
			<property name="userDetailsService" local="inMemoryUserDetailsService"/>
		</component>
		
        <component id="inMemoryDaoAuthenticationManager" class="springpython.security.providers.AuthenticationManager">
        	<property name="authenticationProviderList">
        		<list local="inMemoryDaoAuthenticationProvider"/>
        	</property>
        </component>
        
        <component id="accessDecisionManager" class="springpython.security.vote.UnanimousBased">
        	<property name="decisionVoters">
        		<list local="roleVoter"/>
        		<list local="labelBasedAclVoter"/>
        	</property>
        	<property name="allowIfAllAbstain">False</property>
        </component>
        
		<component id="sampleService" class="springpythontest.support.testSecurityClasses.SampleService"/>        

</components>
