<?xml version="1.0" encoding="UTF-8"?>
<chapter id="overview">
  <title>Overview</title>

	<section id="overview-introduction">
	  	<title>Introduction</title>
  	
			<para><quote>Spring Python is an offshoot of the Java-based Spring Framework and Spring Security Framework,
		 	targeted for <ulink url="http://python.org">Python</ulink>. Spring provides many useful features, and
		 	I wanted those same features available when working with Python.</quote> -- Greg Turnquist, Spring Python project lead</para>
  	
	</section>

	<section id="overview-key-features">
	 	<title>Key Features</title>
 	
		<para>The following features have been implemented:</para>

		<itemizedlist>
		
			<listitem>
				<para><link linkend="components">Inversion Of Control</link> - The idea is to
				decouple two classes at the interface level. This lets you build many reusable
				parts in your software, and your whole application becomes more pluggable. You
				can use either the <classname>XmlApplicationContext</classname> or the
				<classname>DecoratorBasedApplicationContext</classname>.</para>
			</listitem>
		
			<listitem>
				<para><link linkend="aop">Aspect Oriented Programming</link> - Spring Python
				provides great ways to wrap advice around objects. It is utilized for remoting.
				Another use is for debug tracers and performance tracing.</para>
			</listitem>
		
			<listitem>
				<para><link linkend="dao">DatabaseTemplate</link> - Reading from the database
				requires a monotonous cycle of opening cursors, reading rows, and closing cursors,
				along with exception handlers. With this template class, all you need is the SQL
				query and row-handling function. Spring Python does the rest.</para>
			</listitem>
		
			<listitem>
				<para><link linkend="transaction">Database Transactions</link> - Wrapping multiple
				database calls with transactions can make your code hard to read. This module
				provides multiple ways to define transactions without making things complicated.</para>
			</listitem>
		
			<listitem>
				<para><link linkend="security">Security</link>  - Plugin security interceptors to
				lock down access to your methods, utilizing both authentication and domain
				authorization.</para>
			</listitem>
			
			<listitem>
				<para><link linkend="remoting">Remoting</link> - It is easy to convert your local
				application into a distributed one. If you have already built your client and
				server pieces using the IoC container, then going from local to distributed is
				just a configuration change.</para>
			</listitem>
		
			<listitem>
				<para><link linkend="samples">Samples</link> - to help demonstrate various features of Spring Python, some sample
				applications have been created:</para>
				
				<itemizedlist>
					<listitem>
						<para><link linkend="samples-petclinic">PetClinic</link> - Everybody's favorite
						Spring sample application has been rebuilt from the ground up using various web
						containers including: <ulink url="http://cherrypy.org">CherryPy</ulink>.
						Go check it out for an example of how to use this framework.</para>
					</listitem>
					
					<listitem>
						<para><link linkend="samples-springwiki">Spring Wiki</link> - Wikis are powerful
						ways to store and manage content, so we created a simple one as a demo!</para>
					</listitem>
					
					<listitem>
						<para><link linkend="samples-springbot">Spring Bot</link> - Use Spring Python
						to build a tiny bot to manage the IRC channel of your open source project.</para>
					</listitem>
				</itemizedlist>
			</listitem>
			
		</itemizedlist>

	</section>
  
	<section id="overview-what-springpython-is-not">
  		<title>What Spring Python is NOT</title>
  		
  		<para>Spring Python is NOT another web framework. I think there are plenty that are fine to
  		use, like Zope, CherryPy, Quixote, and more. Spring Python is meant to provide utilities to
  		support any python application, including a web-based one.</para>

		<para>So far, the demos have been based on CherryPy, but the idea is that these features
		should work with any WSGI framework. The web components have been developed against CherryPy,
		but the Spring Python team has made the parts WSGI-compatible, so they are reusable with any
		WSGI-based framework. In the future, it would be nice to expand PetClinic to other frameworks
		as well, so see how it is used.</para>
  
  	</section>
  	
  	<section id="overview-support">
  		<title>Support</title>
  		
		<section id="overview-support-forums">
			<title>Forums and Email</title>
	
				<itemizedlist>
					<listitem><para>You can read the messages on <ulink
					url="http://forum.springframework.org/forumdisplay.php?f=45">
					Spring Python's forums</ulink> at the official Spring forum site.</para></listitem>
					
					<listitem><para>If you are interested, you can sign up for the <ulink
					url="http://lists.springsource.com/listmanager/listinfo/springpython-users">
					springpython-developer</ulink> mailing list.</para></listitem>
					
					<listitem><para>You can read the <ulink
					url="http://lists.springsource.com/archives/springpython-users/">
					current archives of the spring-users mailing list</ulink>.</para></listitem>
					
					<listitem><para>You can also read the <ulink
					url="http://sourceforge.net/mailarchive/forum.php?forum=springpython-developer">
					old archives of the retired spring-developer mailing list</ulink>.</para></listitem>
					
					<listitem><para>If you want to join this project, see
					<link linkend="overview-becoming-a-team-member">How to become a team member</link></para></listitem>
				</itemizedlist>
		</section>
		
		<section id="overview-support-irc">
			<title>IRC</title>
				<para>Sorry, I can't seem to get a long-term running IRC bot working
				for me. You'll have to resort to email to reach me for questions or
				issues. -- Greg</para>
		</section>
  	</section>
  	
  	<section id="overview-downloads">
  		<title>Downloads</title>
  		
  		<para>If you want a release, check out
  		<ulink url="http://sourceforge.net/project/showfiles.php?group_id=184275">sourceforge.net</ulink>.</para>

		<para>If you want the latest source code type:
		
<programlisting><![CDATA[
svn co https://src.springframework.org/svn/se-springpython-py/trunk/springpython
]]></programlisting>
		
		</para>
		
		<para>That will create a new <emphasis>springpython</emphasis> folder. This includes both the source code and
		the demo applications (PetClinic and SpringWiki).</para>
		
		<para>You can browse the code at <ulink url="https://fisheye.springframework.org/browse/se-springpython-py"/>.</para>
		
		<para>NOTE: Steps to upload a new release are found
		<ulink url="https://sourceforge.net/docman/display_doc.php?docid=6445&amp;group_id=1#upload">here</ulink>.</para>
  	</section>
  	
  	<section id="overview-license">
  		<title>Licensing</title>
  		
  		<para>Spring Python is released under the <ulink url="http://www.apache.org/licenses/LICENSE-2.0">
  		Apache Server License 2.0</ulink> and the copyright is held by SpringSource.</para>
  	</section>
  	
  	<section id="overview-team">
  		<title>Spring Python's team</title>
  		
  		<para>Spring Python's official team (those with committer rights):</para>

		<itemizedlist>
			<listitem><para>Project Lead: Greg L. Turnquist</para></listitem>
			<listitem><para>Spring Source Sponsor: Russ Miles</para></listitem>
		</itemizedlist>
		
		<para>Many others have also contributed through reporting issues, raising questions, and even
		sending patches.</para>
		
		<section id="overview-becoming-a-team-member">
			<title>How to become a team member</title>
			
			<para>We like hearing about new people interesting in joining the project. We are also
			excited in hearing from people interested in working on a particular jira feature.</para>

			<para>The way we do things around here, we like to work through a few patches before
			granting you any committer rights. You can checkout a copy of the code anonymously,
			and then work on your patch. Email your patch to one of the official team members, and we
			will inspect things. From there we will consider committing your patch, or send you feedback.</para>
			
			<para>If we decide to commit your changes, we may choose to create a new branch for your
			feature, based on the scope of the work, or simply commit it to the trunk. After testing,
			evaluation, and prioritization, we may eventually merge your patch to the trunk. After a few
			patches, if	things are looking good, we will evaluate giving you committer rights.</para>
			
			<para>Spring Python is a <ulink url="http://en.wikipedia.org/wiki/Test-driven_development">
			TDD-based</ulink> project, meaning if you are working on code, be sure to write an automated
			test case and write the test case FIRST. For insight into that, take a trip into the code
			repository's test section to see how current things are run. Your patch can get sold off and
			committed much faster if you include automated test cases and a pasted sample of your test case
			running successfully along with the rest of the baseline test suite.</para>
			
			<para>You don't have to become a team member to contribute to this project, but if you want
			to contribute code, then we ask that you follow the details of this process, because this project
			is focused on high quality code, and we want to hold everyone to the same standard.</para>

			<orderedlist numeration="arabic">
				<title>Getting Started</title>
				<listitem>
					<para>First of all, I suggest you sign up on our <ulink
					url="http://lists.springsource.com/listmanager/listinfo/springpython-users">
					springpython-developer</ulink> mailing list. That way, you'll get notified about
					big items as well be on the inside for important developments that may or may
					not get published to the web site. <emphasis>NOTE: Use springsource list, NOT the
					sourceforge one.</emphasis></para>
				</listitem>
				<listitem>
					<para>Second, I suggest you register for a
					<ulink url="http://jira.springframework.org">jira account</ulink>, so you can leave
					comments, etc. on the ticket. I think that works (I don't manage jira, so if
					it doesn't let me know, and we will work from there) NOTE: I like notes and
					comments tracking what you have done, or what you think needs to be done. It
					gives us input in case someone else eventually has to complete the ticket.
					That would also be the place where you can append new files or patches to
					existing code.</para>
				</listitem>
				<listitem>
					<para>Third, register at the <ulink
					url="http://forum.springframework.org">
					SpringSource community forum</ulink>, and if you want to kick
					ideas around or float a concept, feel free to start a thread in our <ulink
					url="http://forum.springframework.org/forumdisplay.php?f=45">Spring Python
					forum</ulink>.</para>
				</listitem>
				<listitem>
					<para>Finally, we really like to have supporting documentation as well as
					code. That helps other people who aren't as up-to-speed on your piece of the
					system. Go ahead and start your patch, but don't forget to look into the docs
					folder and update or add to relevant documentation. Our documentation is part
					of the source code, so you can submit doc mods as patches also. Include information
					such as dependencies, design notes, and whatever else you think would be
					valuable.</para>
				</listitem>
			</orderedlist>
			
			<para>With all that said, happy coding!</para>
		</section>
	</section>

  	<section id="overview-deprecation">
  		<title>Deprecated Code</title>
  		
  		<para>To keep things up-to-date, we need to deprecate code from time to time. Python has built
        in functionality to put warnings into certain sections of code, so that if you import a
        deprecated module, you will be properly warned. With each major release (1.0, 2.0, 3.0, etc.),
        the Spring Python team has the option to remove any and all deprecated code.</para>

        <para>As an additional note, before making release 1.0, it is quite possible we will make
        sweeping changes without using the warning mechanism. The goal is to release a stable API at 1.0.
        However, we will always strive to notify users of up-and-coming changes through the online
        forum and the mailing, which is why we encourage you to sign up and monitor things online.</para>
  	</section>

</chapter>
